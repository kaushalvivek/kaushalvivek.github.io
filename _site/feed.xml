<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-07-10T12:12:35+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Vivek Kaushal</title><subtitle>A blog about technology, travel and non-fiction.</subtitle><entry><title type="html">Data Analytics : Finding Patterns in Consumer Freedom</title><link href="http://localhost:4000/data-analytics/" rel="alternate" type="text/html" title="Data Analytics : Finding Patterns in Consumer Freedom" /><published>2019-07-07T02:32:00+08:00</published><updated>2019-07-07T02:32:00+08:00</updated><id>http://localhost:4000/data-analytics</id><content type="html" xml:base="http://localhost:4000/data-analytics/">&lt;p&gt;This project was undertaken as a Research Assistant at the National Taiwan University, Taipei, over a two month stay during the summers of 2019, under the guidance of professor Hendrik Rommeswinkel. I worked on a large-scale consumer behavior database that tracked 60,000+ US families’ expenditure on all goods for a period of 14 years, and assisted the development of a data analytics codebase in R to draw inferences on the said database.&lt;/p&gt;

&lt;p&gt;The primary direction of the project was the analyze trends in consumer freedom by looking at various data points and parameters collected in the extensive 14 years long study. Besides development on the codebase, my role also involved a ground-up understanding of data analytics, practical trends in data sciences and applied statistics. I took up online courses on these topics and learned quite a lot, actually.&lt;/p&gt;

&lt;p&gt;The codebase and the database are proprietary hence can’t be shared online, though in summary, a productive summer with an interesting project! Do checkout my upcoming blog post on my stay in Taipei on this website.&lt;/p&gt;</content><author><name>vivekkaushal</name></author><category term="projects" /><category term="Behavioural Economics" /><category term="Statistics" /><category term="Data Analytics" /><category term="Data Science" /><summary type="html">This project was undertaken as a Research Assistant at the National Taiwan University, Taipei, over a two month stay during the summers of 2019, under the guidance of professor Hendrik Rommeswinkel. I worked on a large-scale consumer behavior database that tracked 60,000+ US families’ expenditure on all goods for a period of 14 years, and assisted the development of a data analytics codebase in R to draw inferences on the said database.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/fermi.png" /></entry><entry><title type="html">A Free Energy Solution to Fermi’s Paradox</title><link href="http://localhost:4000/fermi/" rel="alternate" type="text/html" title="A Free Energy Solution to Fermi's Paradox" /><published>2019-06-26T02:32:00+08:00</published><updated>2019-06-26T02:32:00+08:00</updated><id>http://localhost:4000/fermi</id><content type="html" xml:base="http://localhost:4000/fermi/">&lt;p&gt;&lt;strong&gt;&lt;em&gt;“But where is everybody?”&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Asked Fermi, in the summer of 1950, while having lunch with fellow physicists Teller, York and Konopinski. He was referring to the absolute lack of extra-terrestrial contact with intelligent life despite the strong probabilistic evidence of their existence in the observable universe. This question garnered fame as “Fermi’s Paradox” and several explanations have been proposed in the last 69 years without scientific consensus on any particular one.&lt;/p&gt;

&lt;p&gt;In this short article, I propose another such explanation, loosely based on mathematical fundamentals behind Karl Friston’s Free Energy Principle which models human behavior and brain functions on mathematical grounds of restrained entropy.&lt;/p&gt;

&lt;h3 id=&quot;free-energy-principle-in-a-nutshell&quot;&gt;Free Energy Principle in a Nutshell&lt;/h3&gt;

&lt;p&gt;The free energy principle tries to explain how biological systems maintain their order by restricting themselves to a limited number of states. It says that biological systems minimize a free energy functional of their internal states, which entail beliefs about hidden states in their environment. In essence, it implies that biological beings try and build predictions of their environment in their minds and then act to make their environment similar to their prediction while updating their predictions themselves. The key point is survival, with the crux of theory being that we’ll survive better if we can predict accurately how our environment is going to change. You can read more about it &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_energy_principle&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;looking-at-multi-agent-interactions&quot;&gt;Looking at Multi-Agent Interactions&lt;/h3&gt;

&lt;p&gt;In Friston’s work, the external environment is modeled as an event space with only one active-agent : the living creature who’s trying to predict its environment. But what if we try to model this environment as a multi-agent event space? Can the Free Energy Principle explain how we interact with other humans, creatures and information in general?&lt;/p&gt;

&lt;h3 id=&quot;expanding-interaction-circles-and-communication&quot;&gt;Expanding Interaction Circles and Communication&lt;/h3&gt;

&lt;p&gt;In a multi-agent environment, such as ours, we can’t interact with everyone, our interaction will be bound to a small number, we’ll largely communicate with a small number of people while in existence and any information that we attain will be through this small circle of ours. This was true for thousands of years of human history, but with expanding means of communication, and converging social circles, the way we communicate is changing. My hypothesis is that the weights we assign to pieces of information while updating our internal prediction models are dwindling because of a multitude of reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The sheer volume of information we consume&lt;/li&gt;
  &lt;li&gt;Presumptions on authenticity of the information&lt;/li&gt;
  &lt;li&gt;Large volume of sources that we keep tapping into&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On a first look, the information revolution seems like an excellent deal. The ability to communicate with someone a continent away is nothing short of a miracle. The problem might arise when we look at the other side of the coin : our ability to contact everyone a continent away. How much do we trust our new-found social circles? How much weights do we assign to information that we gain today? Are our prediction models slowly becoming blind to the obvious and focusing on fictional stories that we can build out of the thousand sources that we have?&lt;/p&gt;

&lt;h3 id=&quot;the-theory&quot;&gt;The Theory&lt;/h3&gt;

&lt;p&gt;The hypothesis is that no alien civilization has contacted us because intelligent life is bound to drive itself to extinction as its communication prowess crosses a threshold after which its prediction model becomes inefficient and wrapped in a fictional sphere. This without any doubt is a hugely pessimistic outlook which implies that intelligent life will always die out because they’ll essentially stop looking at the problems that are imminent and right in front of their eyes. The way present humanity is ‘dealing’ with the threat of Global Warming makes for a good example. The United States  government denies the existence of Global Warming while an overwhelming majority in the scientific community vouches for more policy-centric focus on the threat.&lt;/p&gt;

&lt;h3 id=&quot;what-you-can-do&quot;&gt;What You Can Do&lt;/h3&gt;

&lt;p&gt;Just keep your eyes open for the next time you choose to believe a more convenient truth. You might just be setting up your brain for temporary comfort at the cost of our species’ survival. :)&lt;/p&gt;</content><author><name>vivekkaushal</name></author><category term="blog" /><category term="Fermi's Paradox" /><category term="Theory" /><category term="Science" /><category term="Research" /><summary type="html">“But where is everybody?”</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/fermi.png" /></entry><entry><title type="html">Zero : A Theoretical Overview</title><link href="http://localhost:4000/zero/" rel="alternate" type="text/html" title="Zero : A Theoretical Overview" /><published>2019-05-03T22:32:00+08:00</published><updated>2019-05-03T22:32:00+08:00</updated><id>http://localhost:4000/zero</id><content type="html" xml:base="http://localhost:4000/zero/">&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;This term paper looks at work done by different eminent researchers towards the understanding of zero – as a price and as a probability, along with our perception of zero. The concept is looked at both from an economic point of view and from a psychological angle. Theories proposed to adjust the standard economic model to better reflect human behaviour and bounded rationality, found experimentally, are also discussed. The mentioned experiments can be repeated on different demographic sections with interesting results, and remain a point of further study. The emergence of neuroeconomics to fill gaps in standard economics theory has also been explored.&lt;/p&gt;

&lt;h2 id=&quot;readings&quot;&gt;Readings&lt;/h2&gt;
&lt;p&gt;Readings for this theoretical overview include the following works:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Paper/Book&lt;/th&gt;
      &lt;th&gt;Author&lt;/th&gt;
      &lt;th&gt;Date&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Zero As a Special Price - True Value for Free Products&lt;/td&gt;
      &lt;td&gt;Dan Ariely, Kristina Shampanier&lt;/td&gt;
      &lt;td&gt;2007&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Predictably Irrational&lt;/td&gt;
      &lt;td&gt;Dan Ariely&lt;/td&gt;
      &lt;td&gt;2008&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Thinking Fast and Thinking Slow&lt;/td&gt;
      &lt;td&gt;Daniel Kahneman&lt;/td&gt;
      &lt;td&gt;2011&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Prospect Theory : An Analysis of Decision under Risk&lt;/td&gt;
      &lt;td&gt;Kahneman, Tversky&lt;/td&gt;
      &lt;td&gt;1979&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Freakonomics&lt;/td&gt;
      &lt;td&gt;Steven D. Levitt&lt;/td&gt;
      &lt;td&gt;2005&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Effort for Payment : A Tale of Two Markets&lt;/td&gt;
      &lt;td&gt;Heyman and Ariely&lt;/td&gt;
      &lt;td&gt;2004&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;context&quot;&gt;Context&lt;/h2&gt;

&lt;p&gt;The standard economic theory aims to explain macroeconomic and microeconomic observations of the world, looking into financial decisions that we make, and the implications of our decisions on larger market forces. It also attempts to theoretically deconstruct these market forces and understand their base causes.&lt;/p&gt;

&lt;p&gt;In Steven D. Levitt’s words, Economics can be be described as ‘a study of incentives’. This definition inherently puts economics under a cognitive lens, with the study of human behaviour gaining utmost importance, in both microeconomic and macroeconomic contexts. Yet, bizarrely enough, standard economic theory assumes humans to be perfectly rational beings, with all decisions being taken by humans under perfect or imperfect information conditions, presumed to be perfectly rational.&lt;/p&gt;

&lt;p&gt;This stance of standard economic theory started being questioned in the early 1970s with the rise of psychological economists of the likes of Daniel Kahneman and Amos Tversky. Questions were raised on the presumed rationality of humans in financial decision making, and a series of controlled experimentation clearly showed deviations from the standard economic theory. These experimentations and proposed models for human behaviour that could better explain human irrationality in financial decisions were clubbed under the domain of a new and upcoming field – Behavioral Economics.&lt;/p&gt;

&lt;p&gt;Besides active work in Behavioral Economics over the past few decades, the development of a much more focused sub-domain – Neuroeconomics – has been notable. Neuroeconomics looks at financial decision making from a cognitive neuroscience perspective, evaluating experimentally observed bounded rationality of humans, based on literature available in neuroscience.&lt;/p&gt;

&lt;p&gt;Now that we have a contextual understanding of the domain, let’s look at work done in neuroeconomics on the concept of zero.&lt;/p&gt;

&lt;h2 id=&quot;literature-overview&quot;&gt;Literature Overview&lt;/h2&gt;

&lt;p&gt;Daniel Kahneman won the Nobel prize in Economics, in 2002 for his and Amos Tversky’s work on Prospect Theory (1979). A notable point here is that Kahneman never took a course in Economics throughout his academic career. Their paper published in 1979, among other things, also looked at the irrational behaviour people exhibit when comparing zero and near-zero probabilities.&lt;/p&gt;

&lt;p&gt;As put in words by Dan Ariely, “Kahneman and Tversky’s (1979) work on probabilities indicates that when it comes to gambles, people perceive zero probability (and certainty) substantially differently than they do small positive probabilities. That is, whereas the values of the latter are perceived as higher than they actually are, perceptions of zero probability are accurate.”&lt;/p&gt;

&lt;p&gt;In Daniel Kahneman’s ‘Thinking Fast and Thinking Slow’ he talks about two systems behind our cognitive decision making – System 1 and System 2. System 2 is the logical decision making that we do while being conscious of the process, like how you (the reader) are reading this document and understanding words and context; whereas System 1 is the force behind our intuitions – like why you (the reader) may not like this font, you did not consciously weigh the pros and cons of the font before making the decision, that’s how System 1 works, without our conscious focus.
Now here, the proposition is that System 1 is responsible for the ‘irrational’ prejudice that we have for near-zero probabilities, a more detailed explanation is available in discussions ahead.&lt;/p&gt;

&lt;p&gt;Another important point in our understanding of Zero is the context in which it is perceived. In Chicago Booth School economist Steven D. Levitt’s 2005 bestseller ‘Freakonomics’ he highlighted the differences between Market Norms and Social Norms. We follow market norms when we value things in a financial manner, whereas social norms are followed in decisions where there’s an absence of financial context – such as appreciation for home-cooked food. Levitt’s work on Market and Social norms was reiterated in Heyman and Ariely’s ‘Effort for Payment : A Tale of Two Markets’. With certain deviations from standard economic theory when dealing with Zero, explained in a social context. For example, when a class of students were asked to take chocolates, the demand was higher when the chocolates were priced, compared to when the chocolates were free. This economic abnormality can be explained by the theory on social norms, where free chocolates weren’t perceived as an economic transaction.&lt;/p&gt;

&lt;p&gt;In ‘Zero As a Special Price - True Value for Free Products’, Dan Ariely and Kristina Shampanier attempt to sum up existing theories on abnormalities regarding zero from an economic context while relying on experimentation to validate their hypothesis. Standard economic theory says that when faced with a choice of selecting one of several available products (or possibly buying nothing), people will choose the option with the highest cost–benefit difference. But in this paper, Dan Ariely and Kristina Shampanier propose that decisions about free products differ as people do not simply subtract costs from benefits and perceive the benefits associated with free products as higher.&lt;/p&gt;

&lt;p&gt;To test this radical proposal, a series of experiments were carried out while contrasting demand for two products across conditions where they maintained a constant price difference between goods, but varied the said prices such that the cheaper product in the set of products is priced at either a low positive or a zero price. The results showed a skewed demand for zero-priced products which were against the prediction of standard economic theory, and confirmed the hypothesis put forward in the paper. Thus, people appear to act as if zero pricing of a good not only decreases its cost but also adds to its benefits. These tests were both real and hypothetical in nature, and carried out on campus residents of MIT, Cambridge.&lt;/p&gt;

&lt;p&gt;Beyond this effect, several psychological antecedents of the effect were proposed as well, including social norms, mapping difficulty among others. More details on the saime are discussed in the Discussion section below.&lt;/p&gt;

&lt;h2 id=&quot;discussion&quot;&gt;Discussion&lt;/h2&gt;

&lt;p&gt;Based on existing literature on the subject, we can say with a fair degree of confidence that humans aren’t perfectly rational. Prospect theory among other popular works have firmly established the bounded and contextual nature of human rationality when it comes to decision making. Taking up the study of economic theory abnormalities surrounding ‘Zero’ proved to be an excellent way to gauge various sub-domains of Behavioural Economics, and by extent human behaviour and our cognitive structure.&lt;/p&gt;

&lt;p&gt;Zero being perceived as a ‘social norm’ in contextual decisions highlights how our ‘System 1’ functions, and how quickly our brain is able to differentiate a financial context from a non-financial one without us being consciously aware of it. The way our brain seems to be hot-wired from birth to gauge patterns in certain respects, such as language, reading facial expressions, understanding social contexts is fascinating to say the least. These functionalities of ‘System 1’ as put by Daniel Kahneman, are built out of synaptic networks that comprise Associative Memory and is incredibly powerful and engagingly interesting.&lt;/p&gt;

&lt;p&gt;It is this ‘System 1’ that give chess masters an instinctive responses to different board positions, where others will use their logical, conscious thought process. Our perception of near-zero probability and zero costs eventually boils down to this ‘System 1’ only. This rapid-decision-making functionality has been honed throughout human evolution to ensure our survival, and that involves quick decision making in situations, without a logical evaluation, when the context of the decision seems familiar. Hence, when someone gives us something for ‘free’, taking it is the instinctive reaction. It’s a risk-free decision, that on face-value and past context seems intuitive.&lt;/p&gt;

&lt;p&gt;The study of how our instincts are honed, and how our brain actually functions in intuitive decision-making, while studying our understanding of ‘Zero’ has been a thought provoking venture.&lt;/p&gt;

&lt;h2 id=&quot;future-scope&quot;&gt;Future Scope&lt;/h2&gt;

&lt;p&gt;Although the work done by the academic community in Behavioural Economics and intuitive decision making has been phenomenal, there is still scope for further refinement and verification of concepts concerning our understanding of ‘Zero’ price and probability. Some points that I feel future studies can be built around are as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Looking at a younger demographic might help researchers understand some of the characteristics of intuition and help segregate environmental factors and learnt behaviour from evolutionary traits.&lt;/li&gt;
  &lt;li&gt;Although microscopic transactions have been well-explored, work still needs to be done at the macroscopic level, explaining market forces from a neuroscience perspective still remain the holy grail of behavioural economics.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Ariely, Dan. Predictably Irrational : the Hidden Forces That Shape Our Decisions. New York :Harper Perennial, 2010. Print.&lt;/li&gt;
  &lt;li&gt;Ariely, Dan &amp;amp; Shampanier, Kristina. Zero As a Special Price, http://web.mit.edu/ariely/www/MIT/Papers/zero.pdf&lt;/li&gt;
  &lt;li&gt;Heyman, James &amp;amp; Ariely, Dan. (2004). Effort for Payment A Tale of Two Markets. Psychological science. 15. 787-93. 10.1111/j.0956-7976.2004.00757.x.&lt;/li&gt;
  &lt;li&gt;Kahneman, Daniel, 1934-. Thinking, Fast and Slow. New York :Farrar, Straus and Giroux, 2011. Print.&lt;/li&gt;
  &lt;li&gt;Kahneman, Daniel &amp;amp; Tversky, Amos, 1979. “Prospect Theory: An Analysis of Decision under Risk,” Econometrica, Econometric Society, vol. 47(2), pages 263-291, March.&lt;/li&gt;
  &lt;li&gt;Levitt, Steven D, and Stephen J. Dubner. Freakonomics: A Rogue Economist Explores the Hidden Side of Everything. New York: William Morrow, 2005. Print.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>vivekkaushal</name></author><category term="blog" /><category term="Zero" /><category term="Economics" /><category term="Behavioural Economics" /><category term="Research" /><summary type="html">Abstract This term paper looks at work done by different eminent researchers towards the understanding of zero – as a price and as a probability, along with our perception of zero. The concept is looked at both from an economic point of view and from a psychological angle. Theories proposed to adjust the standard economic model to better reflect human behaviour and bounded rationality, found experimentally, are also discussed. The mentioned experiments can be repeated on different demographic sections with interesting results, and remain a point of further study. The emergence of neuroeconomics to fill gaps in standard economics theory has also been explored.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/career.png" /></entry><entry><title type="html">To-Do WebApp in React</title><link href="http://localhost:4000/react-to-do/" rel="alternate" type="text/html" title="To-Do WebApp in React" /><published>2019-04-11T22:32:00+08:00</published><updated>2019-04-11T22:32:00+08:00</updated><id>http://localhost:4000/react-to-do</id><content type="html" xml:base="http://localhost:4000/react-to-do/">&lt;p&gt;I’ve started learning React as a part of my effort to master React and Flutter over the course of next couple of months. This is a simple to-do app created as a part of a learning react.&lt;/p&gt;

&lt;h3 id=&quot;functionalities-&quot;&gt;Functionalities :&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Add to-do&lt;/li&gt;
  &lt;li&gt;Display to-dos&lt;/li&gt;
  &lt;li&gt;Cross off to-do&lt;/li&gt;
  &lt;li&gt;Show number of active to-dos&lt;/li&gt;
  &lt;li&gt;filters for all/inactive/active to-dos&lt;/li&gt;
  &lt;li&gt;Mark to-dos as complete&lt;/li&gt;
  &lt;li&gt;Delete button for todos&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pre-requisites&quot;&gt;Pre-requisites:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Node&lt;/li&gt;
  &lt;li&gt;React&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;usage-&quot;&gt;Usage :&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Clone the repository or download a zip, &lt;a href=&quot;https://github.com/kaushalvivek/react-to-do/&quot;&gt;link to repo.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Navigate to the root &lt;code class=&quot;highlighter-rouge&quot;&gt;to-do/&lt;/code&gt; folder&lt;/li&gt;
  &lt;li&gt;Run:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Run :
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Based on the tutorial:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=I6IY2TqnPDA&amp;amp;t=464s&quot;&gt;Practical React&lt;/a&gt; course by Ben Awad.&lt;/p&gt;</content><author><name>vivekkaushal</name></author><category term="projects" /><category term="React" /><category term="JavaScript" /><category term="Web Development" /><category term="Open Source" /><summary type="html">I’ve started learning React as a part of my effort to master React and Flutter over the course of next couple of months. This is a simple to-do app created as a part of a learning react.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/career.png" /></entry><entry><title type="html">Research Project - Career Choice Simulator</title><link href="http://localhost:4000/career-choice-simulator/" rel="alternate" type="text/html" title="Research Project - Career Choice Simulator" /><published>2019-04-09T22:32:00+08:00</published><updated>2019-04-09T22:32:00+08:00</updated><id>http://localhost:4000/career-choice-simulator</id><content type="html" xml:base="http://localhost:4000/career-choice-simulator/">&lt;p&gt;Link : &lt;a href=&quot;http://web2py.iiit.ac.in/research_centres/publications/view_publication/inproceedings/1541&quot;&gt;http://web2py.iiit.ac.in/research_centres/publications/view_publication/inproceedings/1541&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Motive : To explore correlation between risk behaviour and academic performance
Method : Created a simple binary choice career simulator with an intuitive interface.
Notes  : Presented results at Foundation of Utility and Risk Conference, 2018 - University of York.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;abstract&quot;&gt;Abstract&lt;/h3&gt;

&lt;p&gt;We studied financial decision-making behavior and assessed risk propensity using a career choice simulator to understand correlations between academic performance and risk propensity, academic performance and risk-intelligence, net-worth and risk behaviour. The effect of ‘brands’ on logical decision-making was also studied. The main objective of the experiment was to check the balance between logical choices and risk propensity in financial decisions. An interactive game-like app – the career choice simulator –was designed and developed as a part of the setup.&lt;/p&gt;

&lt;h3 id=&quot;keywords&quot;&gt;Keywords&lt;/h3&gt;
&lt;p&gt;Risk; Risk Propensity; Financial Risk-Taking; Academic Performance, Risk Intelligence&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Risk is defined as chance taken when uncertainty is involved, by weighing the probabilities of a win or loss. Human decision making includes a constant perception of risk involved. The said perception of risk is an intuitive judgement, which is different from risk assessment, the latter being a statistical analysis of a given situation with a final contemplative decision. [3] Our innate tendency to minimise loss is a potent force behind our decisions. [1] Our adeptness at evaluating choices, given context and information, based on a subjective interpretation of involved probabilities is called Risk Intelligence. [2] 
As discussed in Figner B &amp;amp; Weber EU’ 2011 [5], there are four crucial determinants of risk, them being: (a) decision between options varying in risk occurs in different domains (b) risky decisions involve different psychological processes (c) greater risks typically comes with greater returns (d) risk taking is neither a single phenomenon nor a single personality trait, and it can be motivated by various processes, not just risk attitudes [5]. Hence, Risk taking is not just an expression of a single personality trait, one’s risk propensity cannot be estimated from a  single situation as it is affected by various environmental and contextual factors. This could include conflicting motivations like greed and fear/avoidance. Observed differences in an individual’s risk taking can be driven by various parameters such as their perception of expected reward, general risk perceptions or level of risk they are willing to accept in exchange for specific returns and competitiveness in case of peer presence. Prize, price and probability of a win are three important factors in decision making under risk (Ziller, 1957). Prize here is the object or amount to be gained in a case of success (reward), price is the object or amount to be lost in a case of failure and probability of win is the chance of winning. An individual can be gain sensitive, loss sensitive and/or probability sensitive.&lt;/p&gt;

&lt;p&gt;Hence, it isn’t essentially a surprise that different risk taking measures (self-report, surveys, lottery choices, real world choices) do not always strongly correlate [reference]. The context and situation matter, and each event presents a different context for risk-evaluation. At the same time, the risk taking behavior as reported by various methods can give insights into the factors influencing risk taking.
This paper looks at academic performance as a possible indicator of higher risk intelligence, and examine possible correlations between academic performance and risk propensity.&lt;/p&gt;

&lt;h3 id=&quot;methodology&quot;&gt;Methodology&lt;/h3&gt;

&lt;h4 id=&quot;section-1--structure-of-the-setup&quot;&gt;Section 1 : Structure of the Setup&lt;/h4&gt;

&lt;p&gt;An interactive browser-based game was created where the objective was to maximize one’s Net Worth by choosing a job out of the two available choices in each round. There were a total of 15 rounds, divided into 3 stages of 5 rounds each. The first stage had the metrics    Salary and Performance Cutoff associated with each job option. The second and third stages had an additional factor -  Company Name added to both the job options.
When the user selected a job in a round, a Performance Score was selected from a randomly generated predefined set. If the Performance Score was lower than the the selected job’s Performance Cutoff, a penalty amount was deducted from user’s Net Worth and he/she was lead to the next round. Else, if the Performance Score was greater than the selected job’s Performance Cutoff, then the Salary amount was added to user’s Net Worth and he/she was lead to the next round. The Performance Cutoff  was not known to the student at the time of decision-making, hence it created a scenario where decision-making happened under uncertainty, with self-estimation of risk involved based on visible information. After recording responses for all 15 rounds, users were presented with a questionnaire comprising of standard questions from the DOSPERT (reference) Scale for self-estimation of Risk Propensity in Financial and Social domains and responses were recorded. Preference order for Location, Salary and Company while choosing a job was also collected.&lt;/p&gt;

&lt;h4 id=&quot;section-2--the-subject-of-experiment-and-its-execution&quot;&gt;Section 2 : The Subject of Experiment and its Execution&lt;/h4&gt;

&lt;p&gt;50 sophomore Computer Science students (aged 19-21), 25 with a GPA above 8.0 and 25 with a GPA below 8.0, were asked to play the game and their response were carefully recorded.A high level of immersion was created by carefully designing a user interface which displayed relevant information in an intuitive layout. The goal was to drive the user’s attention towards the decision-making process while providing necessary information in a clean, non-intrusive manner.&lt;/p&gt;

&lt;p&gt;A High Score was displayed through the gameplay to add an element of competition and peer influence to user’s decision-making in the game. Peer influence and competition have been shown to enhance risk-taking in adolescents. In each round, one job option had a high Performance Cutoff and another had a low Performance Cutoff. The Salary for both job options were different accordingly, such that a high-risk-high-reward scenario was created. In the second stage, a Company Name with a higher brand perception (reference)was added to the high-risk-high-reward job option, while a Company Name with a low reward perception  (reference), was added to the low-risk-low-reward job option. In the third stage, we did the opposite, a Company Name with a low reward perception (reference)was added to the high-risk-high-reward job option, while a Company Name with a high reward perception  reference), was added to the low-risk-low-reward job option.Comparison of performance across the three stages provided insights into the effect of brand allegiance on logical decision making.&lt;/p&gt;

&lt;h3 id=&quot;results&quot;&gt;Results&lt;/h3&gt;

&lt;p&gt;The average in-game Net Worth of students with a GPA ≥ 8, ($1.14 million) was 30.7% higher than the average net-worth of students with a GPA &amp;lt; 8 ($0.87 million), at the end of all 15 rounds. Students with a GPA ≥ 8 took 186 high risk decisions. 10.2% lower than students with a GPA &amp;lt; 8, who took 205 high risk decisions. Students who had a lower GPA faced the penalty 99 times in the game. 43.5% higher than students with a GPA ≥ 8, who faced the penalty 69 times. A weakly negative correlation of -0.3 was observed between the DOSPERT Scale and risk-taking behavior observed in this experimental setup. (will break it up  into correlations of high and low GPA separately if needed)&lt;/p&gt;

&lt;p&gt;24 students (out of the 50) ranked Salary as the most important factor while choosing a job, followed by 16 for Company and 10 for Location. Average Net Worth of students who chose Company as the most important parameter in job selection was $981,000, 7% lower than the average net worth of students who chose Company as the least important parameter in selecting a job.&lt;/p&gt;

&lt;h3 id=&quot;discussion&quot;&gt;Discussion&lt;/h3&gt;

&lt;p&gt;The 30.7% higher average net-worth of students with a GPA ≥ 8 might be attributed to higher risk intelligence of students with a higher GPA. Students with lower GPA also face a penalty 43.5% more times, this can be seen in the above light or that the high performing students are better adept assessing risk-reward situations. This would bring to light a positive correlation between risk intelligence and academic performance, though further studies are necessary to establish a correlation between risk intelligence and other forms of intelligence.&lt;/p&gt;

&lt;p&gt;Students with lower GPA took 10.2% more risks, an interesting result that needs to be examined with respect to the effect of  lower expectation from society and hence propensity for high risk behavior [4].&lt;/p&gt;

&lt;p&gt;Students who ranked Company as the most important factor in making job-choices had a 7\% lower net-worth than students who ranked Company as the least important factor. One can infer that allegiance to ‘brands’ interferes with the logical decision making, more studies are needed to show conclusive evidence for the same.&lt;/p&gt;

&lt;p&gt;Contrary to expectations, no direct correlation was observed between net-worth of an individual and risk-taking, which indicated that the tendency to risk is independent of net-worth and people are inherently either high or low risk takers. The findings from this study highlights certain constraints of the educational and career choice expectation on Indian students. The data brings a unique testing tool for risk and goals adding to rational choice theory experiments.&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ariely, Dan. Predictably Irrational : the Hidden Forces That Shape Our Decisions. New York :Harper Perennial, 2010. Print.&lt;/li&gt;
  &lt;li&gt;Evans D. (2012) Risk Intelligence. In: Roeser S., Hillerbrand R., Sandin P., Peterson M. (eds) Handbook of Risk Theory. Springer, Dordrecht&lt;/li&gt;
  &lt;li&gt;Perception of risk, P Slovic (1987)&lt;/li&gt;
  &lt;li&gt;O‘Stark and &amp;amp; Zawojska. E (2015)&lt;/li&gt;
  &lt;li&gt;Figner, B., &amp;amp; Weber, E. U. (2011). Who takes risks when and why? Determinants of risk taking. Current Directions in Psychological Science, 20(4), 211-216.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>vivekkaushal</name></author><category term="projects" /><category term="Risk" /><category term="Decision Making" /><category term="Neuroeconomics" /><category term="Behavioural Economics" /><category term="Human Computer Interaction" /><summary type="html">Link : http://web2py.iiit.ac.in/research_centres/publications/view_publication/inproceedings/1541</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/career.png" /></entry><entry><title type="html">Predictably Irrational - Book Review</title><link href="http://localhost:4000/predictably-irrational/" rel="alternate" type="text/html" title="Predictably Irrational - Book Review" /><published>2019-04-06T01:47:00+08:00</published><updated>2019-04-06T01:47:00+08:00</updated><id>http://localhost:4000/predictably-irrational</id><content type="html" xml:base="http://localhost:4000/predictably-irrational/">&lt;p&gt;&lt;strong&gt;Information Box:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Book    : Predictably Irrational
Author  : Dan Ariely
DoP     : 2008
Genre   : Non-Fiction
Tags    : Behavioural Economics, Neuroeconomics, Decision Making
Rating  : 9/10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This particular book is special because it’s very closely related to my research. Behavioural economics is an area of research that looks closely at gaps in standard economic models when it comes to explaining human behaviour, which is often erratic and unpredictable from an economic point of view. Dr. Dan Ariely is one of the foremost visionaries of the modern world view in Behavioural economics, and through this book he breaks down the motive and nitty grittes of the field without initimidating the reader. Of all the books I’ve read, this is the most complete introduction of the field I’ve come across. The narrative is not an academic one, it’s more of a personal story, arguably even autobiographical in tone, where Dan skips through multiple experiments like a kid in a candy store while explaining the rationale behind their setting and giving insights into human behaviour.&lt;/p&gt;

&lt;h3 id=&quot;relativity&quot;&gt;Relativity&lt;/h3&gt;
&lt;p&gt;Einstein said it. All of know and accept it. But probably not quite in the manner as we sub-consciously do. Our minds are wired to compare and we rigorously do so, anything and everything we can. These comparisons lead us to questionable decision making where economic theory assumptions of our rationality fall apart. For example, the same person who travels 15 mins to buy slightly cheaper groceries from a store farther away, will probably not hesitate in spending an additional few thousands on the purchase of a new car. Does the utility of money change with context? Of course not. We just judge the extra cost by putting it next to our base purchase. A ₹3 PayTM surcharge on a ₹100 spend is not a big deal, the same charge on a ₹10  purchase is. This can be expanded beyond money to other contexts with the same basic premise. It might sound intuitive, but it goes against economic theory’s assumptions of our rationality and sees human decision making in new light.&lt;/p&gt;

&lt;h3 id=&quot;price-anchoring&quot;&gt;Price Anchoring&lt;/h3&gt;
&lt;p&gt;Demand and supply are forces that regulate market prices of commodities. That’s common knowledge. But in Predictably Irrational, Ariely argues that contrary to common perception, price anchoring is a much stronger and potent force than we give it credit for. How exactly do we determine that diamonds are expensive? That property prices in a certain section of a city, or of our favourite dish on a restaurant menu is what it is supposed to be? The answer is price anchors. Our brain gets conditioned to a price point for a particular commodity and accepts it. This is the reason why people who move from smaller cities to larger cities find prices of commodities exorbitant. Why I, as an Indian and used to paying Rs. 20 for a bottle of water, find it agonisingly painful to pay a pound for a bottle of water when I travel. Price anchors are the secret drivers of demand, and they get established in an un-intuitive manner, and once they are imprinted, it’s very hard to shake them.&lt;/p&gt;

&lt;h3 id=&quot;cost-of-zero-cost&quot;&gt;Cost of Zero Cost&lt;/h3&gt;
&lt;p&gt;In this chapter, Dan explains how we treat ‘FREE’ offerings irrationally. This again plays towards our inherent bias of loss minimisation, where loss aversion is a greater motivator than the possibility of gains. The proposition of ‘FREE’ offerings makes us believe that there is no downside of a decision, i.e., no loss whatsoever, hence, we form an irrationally bias towards them. We do not realise any hidden downsides like the utility of our invested time, among others when dealing with ‘FREE’ or zero-cost offerings.&lt;/p&gt;

&lt;h3 id=&quot;the-monetary-equivalence-of-a-friendly-favour&quot;&gt;The Monetary Equivalence of a Friendly Favour&lt;/h3&gt;
&lt;p&gt;This particular point is very interesting as it isn’t quite as intuitive as others on this list. Unlike what we might be inclined to believe, monetary gratification is not always a primary driver or incentive for us to work. Dan explains this through the example of a household dinner, where compliments are socially acceptable and desirable, but monetary payments are not. Now this is common understanding, but research also shows that the same principles of ‘personal’ relationship hold strong when carefully cultivated by an employer for an employee. Implying, that personalised gifts might be a better reward to boost productivity than cash bonuses.&lt;/p&gt;

&lt;h3 id=&quot;emotions-in-decisions&quot;&gt;Emotions in Decisions&lt;/h3&gt;
&lt;p&gt;We are emotional beings, and although we might accept sheepishly to being swayed by our emotions from time to time when taking decisions, we do not quite understand the extent of this phenomenon. Dan tested young adult decision making and risk propensity in sexual decision in normative and aroused states and the difference was incredible. In an aroused state, teens were much more likely to partake in risky sexual behaviour, beyond societal, statistical and their own expectations.&lt;/p&gt;

&lt;h3 id=&quot;procrastination&quot;&gt;Procrastination&lt;/h3&gt;
&lt;p&gt;We all suffer from this uncanny bane of our generation to varying degrees. Dan setup a beautiful class experiment where he gave his students choices of varying degrees of freedom in setting their own deadlines for the course’s requirements, assignments and reports. The options included strict professor set deadlines, lax time-bound deadlines and no deadlines whatsoever, with all submissions due before the end of the course. Upon analysing the behaviour of students, Dan arrived at the conclusion that we are not really great at setting deadlines for ourselves, and having external deadlines forced upon us might actually be a boost for the productivity of a majority of us. Details on the experiment and results can be found in the following paper.&lt;/p&gt;

&lt;h3 id=&quot;irrational-ownership&quot;&gt;Irrational Ownership&lt;/h3&gt;
&lt;p&gt;When it comes to assigning values to objects we behave irrationally for our own possessions. Dan proved this through a series of experiments on university football tickets at the Duke University. Students who were able to purchase the tickets valued them 10 times more than students who did not get them. 10 times. This is a practical demonstration of the Endowment Effect. Dan attributes this irrationally skewed valuation to the following points:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;We prioritise reducing losses over gains, hence assigning greater important to our own possessions makes for an attempt to maintain the status quo which may have evolutionary benefits.&lt;/li&gt;
  &lt;li&gt;We initiate non-monetary connections to things we own, which makes their disposition complicated.&lt;/li&gt;
  &lt;li&gt;We assume people will see transactions from our own point of view.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;great-expectations&quot;&gt;Great Expectations&lt;/h3&gt;
&lt;p&gt;Our expectations play a much more important role in shaping our experiences than we realise. We tend to form stereotypes around our expectations and these stereotypes weigh strongly on our actual experience. Dan tested this through his students’ perception of taste for two brands of beers - Budweiser and a Blasmic Vinegar brew that’s native to MIT. When made aware of the beer brands, most students preferred the Budweiser as the Vinegar brew has a bad name amongst the general student community, but when unaware of the brands, students reported similar tastes and likableness for both the beer brands. The expectation of a sour vinegar-like taste from MIT brew played a crucial role in playing down its likableness. This experiment can have far-reaching repercussions in our daily lives and the decisions we make.&lt;/p&gt;

&lt;h3 id=&quot;power-of-price&quot;&gt;Power of Price&lt;/h3&gt;
&lt;p&gt;Expensive phones are better than cheaper phones, and the same holds for watches, TVs, laptops and a lot of other stuff, right? Maybe, for a large number of cases, yes. But this has led to our brain conditioning us to believe that expensive commodities always have an edge over their cheaper alternative, so much so that we react differently to even medication that’s expensive. Placebo is an age-old concept but its application in medical prices was discovered by Dan in a series of innovative experimentation where people reported significantly greater relief from headache when they were provided an expensive headache pill compared to a cheaper alternative. There is only one catch - here, both the medicines were exactly the same. People’s expectation from the expensive medicine to be more effective was a strong enough placebo to help them with their headache. Similar concepts can be applicable in multiple spheres of our lives.&lt;/p&gt;

&lt;p&gt;All in all, I found Predictably Irrational frankly brilliant. Dan doesn’t try to speak from an academic high-point the the book never feels preachy. Innovative new theories are presented in a very intuitive manner that readers will enjoy. As perfectly put by the New York Times, &lt;em&gt;“Predictably Irrational is a far more revolutionary book than its unthreatening manner lets on. It’s a concise summary of why today’s social science increasingly treats the markets-know-best model as a fairy tale.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Feel free to reach out to me for more material on any of the discussed concepts in the book, or directly search for them online.&lt;/p&gt;</content><author><name>vivekkaushal</name></author><category term="blog" /><category term="Non-Fiction" /><category term="Book Report" /><category term="Economics" /><category term="Decision-Making" /><summary type="html">Information Box: Book : Predictably Irrational Author : Dan Ariely DoP : 2008 Genre : Non-Fiction Tags : Behavioural Economics, Neuroeconomics, Decision Making Rating : 9/10 This particular book is special because it’s very closely related to my research. Behavioural economics is an area of research that looks closely at gaps in standard economic models when it comes to explaining human behaviour, which is often erratic and unpredictable from an economic point of view. Dr. Dan Ariely is one of the foremost visionaries of the modern world view in Behavioural economics, and through this book he breaks down the motive and nitty grittes of the field without initimidating the reader. Of all the books I’ve read, this is the most complete introduction of the field I’ve come across. The narrative is not an academic one, it’s more of a personal story, arguably even autobiographical in tone, where Dan skips through multiple experiments like a kid in a candy store while explaining the rationale behind their setting and giving insights into human behaviour.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/predictably-irrational.png" /></entry><entry><title type="html">Building Usability into an Existing System</title><link href="http://localhost:4000/bowling-extension/" rel="alternate" type="text/html" title="Building Usability into an Existing System" /><published>2019-04-01T22:32:00+08:00</published><updated>2019-04-01T22:32:00+08:00</updated><id>http://localhost:4000/bowling-extension</id><content type="html" xml:base="http://localhost:4000/bowling-extension/">&lt;p&gt;Built upon the previous refactoring of existing codebase, an extension of the project was the addition of interactive features and by-and-large gamification of the entire application. Multiple additions were made to the codebase while keeping &lt;em&gt;Interactive nature of the application&lt;/em&gt;, its &lt;em&gt;Extensibility, Configurability&lt;/em&gt; and &lt;em&gt;adherence to Software Design Patterns&lt;/em&gt; in mind.&lt;/p&gt;

&lt;p&gt;The codebase was worked upon by a team of three, with over a 1000 lines of code added to the existing codebase with strict adherence to our decided 4 salient features. Documentation for the codebase and additions can be found &lt;a href=&quot;https://docs.google.com/document/d/e/2PACX-1vTHAi5TtJ9hPjHOqqB4LsiEi_WcRg9m55GjupitZjDLQF1mupOS1pws2d2pjMWbxbL15ER9fd_nieu7/pub&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link to the repository will be uploaded once the academic regulations permit.&lt;/p&gt;</content><author><name>vivekkaushal</name></author><category term="projects" /><category term="Java" /><category term="Software Engineering" /><category term="Usability Engineering" /><category term="Human Computer Interaction" /><summary type="html">Built upon the previous refactoring of existing codebase, an extension of the project was the addition of interactive features and by-and-large gamification of the entire application. Multiple additions were made to the codebase while keeping Interactive nature of the application, its Extensibility, Configurability and adherence to Software Design Patterns in mind.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/welcomescreen.png" /></entry><entry><title type="html">Seeing Like A Feminist - Book Review</title><link href="http://localhost:4000/seeing-like-a-feminist/" rel="alternate" type="text/html" title="Seeing Like A Feminist - Book Review" /><published>2019-02-27T01:47:00+08:00</published><updated>2019-02-27T01:47:00+08:00</updated><id>http://localhost:4000/seeing-like-a-feminist</id><content type="html" xml:base="http://localhost:4000/seeing-like-a-feminist/">&lt;p&gt;&lt;strong&gt;Information Box:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Book    : Seeing Like A Feminist
Author  : Nivedita Menon
DoP     : 2012
Genre   : Non-Fiction
Tags    : Feminism, Society, Indian Culture
Rating  : 7/10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;“Feminism is not about that moment of final triumph, but about the gradual transformation of the social field so decisively that old markers shift forever. . . It comes slowly, slowly, feminism does. But it just keeps on coming.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When I started reading Nivedita Menon’s ‘Seeing Like a Feminist’, I had a clear cut preconceived notion of what feminism is and what it means to be a feminist. Afterall, I constantly identified myself as one. That was the core reason behind my decision to pursue Gender Studies as a course in the first place. I held this belief that I was brought up in a modern liberal family, where there were no undue restrictions on female members and my sister and me were equal in all respects. When I heard, or read about gender bias, discrimination against women, social bias among other issues, I looked outside my family, my school and the immediate society for examples, never within. In my mind, my family, my school, my friends and my immediate society were an epitome of idealised existence where gender equality was an obvious assumption, not a right to fight for. Nivedita Menon questioned many of the fundamental beliefs I held in this direction. Many subtleties that I overlooked, and social norms that I accepted without questions were brought to light in a manner where I realised that their obviousness was a patriarchal construct in itself.&lt;/p&gt;

&lt;p&gt;The author starts presenting her points with a quick look at nude makeup. She draws strong social parallel to how nude makeup is essentially a bunch of techniques to make a person appear more ‘naturalistic’, over and above his or her own natural self. The analogy here, is that our social order follows similar rituals, where we reiterate and naturalize certain patriarcal actions with the eventual aim of them appearing instinctive and unrehearsed, while in all fairness we are really just solidifying the opressants of feminism in our social structure. The analogy caught my attention, and was a precursor to the eye-opening nature of the book where we look at our own surroundings in an ever so slightly altered manner.&lt;/p&gt;

&lt;p&gt;Quotation to support argument:
&lt;em&gt;“The whole point of nude make-up, clearly, is to spend hours painting your face in order to make it look like you had not touched it at all. The maintaining of social order is rather like that. It requires the faithful performance of prescribed rituals over and over again throughout one’s lifetime. Complex networks of cultural reproduction are dedicated to this sole purpose. But the ultimate goal of all this unceasing activity is to produce the effect of untouched naturalness.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Nivedita Menon goes on to look in detail at six core concepts, namely Family, Body, Desire, Sexual Violence, Feminists in today’s world and Victims. On each of these, she dwells into the grasp of patriarchy and its effect on women, subtle in some cases, violent in others - but unequivocally demeaning. I was particularly fascinated by the author’s look at our families. In her typical logical unravelling of the characteristic Indian family, she points out through careful examples how violently our families are actually bound together in its social order. I’d be honest, her statement made me reflect on my own family background, and I was left wondering for explanations at some of her points. The ever-present marriage pressure, for example, something that has been notoriously naturalised by Indian pop-culture, its enforcement at the hands of a rigid patriarchal society, and violent treatment of those who oppose it, left me wondering how close I actually am to system that rejects the basic human will to love a person of choice. Acceptance of homosexuality is a far cry in a system so rigid where life-long matches are made on socio-economic grounds by non-involved parties, without even the consent of the couple in many scenarios.&lt;/p&gt;

&lt;p&gt;Quotation to support argument:
&lt;em&gt;“The family is an institution that rigidly enforces systems of inheritance and descent, and in this structure, individuals – sons, daughters, wives, husbands – are resources that are strictly bound by the violence, implicit and explicit, of this frame. As feminists, we need to build up the capacity and the strength of both men and women to live in ways in which marriage is voluntary, and to build alternate non-marriage based communities.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Speaking of homosexuality, the author paints a realistic picture of the Indian society, one that the millennial generation is acutely aware of but rarely acknowledges. Despite the law being accepting of homesexuality today, a majority of the Indian demographic is unaware and uneducated on its basic notions. The usage of the term ‘queer’ probably best reflects what an overwhelming majority of the Indian diaspora feels about individuals who stray away from traditional straight marriages. The ground reality remains that fluidity of sexuality is not a concept that our present society comprehends.&lt;/p&gt;

&lt;p&gt;Quotation to support argument:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;“Perhaps also, one body may, in one lifetime, move through many identities and desires. The use of ‘queer’ then, is a deliberate political move, which underscores the fluidity (potential and actual) of sexual identity and sexual desire.”&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;“Real change in society comes from the kinds of ways queer people live; women and men who don’t choose to marry, or marry and do different kinds of things with that marriage; when workers organise; domestic servants organise.”&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Seeing Like A Feminist was published at a time when India was grappling from a horrific case of sexual violence, one that brought the nation to a standstill and grabbed our imagination in an unprecedented manner. Today, 7 years later, I am not certain if we’ve made any progress whatsoever. The statistics reflect that no significant change has been brought about and the sad reality remains that we live in a nation where marital rape isn’t a crime.&lt;/p&gt;

&lt;p&gt;In my personal opinion, the unfortunate legality of marital rape in India is the quintessential representation of the flawed patriarchal model that Nivedita Menon talks about. If we try and break it down logically, the facts are that a heinous and violent crime against an individual is judged as acceptable in India as long as it occurs within the confines of marriage, a carefully created social construct that is patriarchally biased and rigit to its very core.&lt;/p&gt;

&lt;p&gt;Looking beyond the book, Nivedita Menon puts forward a radical definition of feminism, where she does not identify it as movement with some arbitrary triumphant victory in mind. She looks at feminism as a gradual transformation of our social order, a decisive shift that leaves old markers behind, and I couldn’t agree more.&lt;/p&gt;</content><author><name>vivekkaushal</name></author><category term="blog" /><category term="Non-Fiction" /><category term="Book Report" /><summary type="html">Information Box: Book : Seeing Like A Feminist Author : Nivedita Menon DoP : 2012 Genre : Non-Fiction Tags : Feminism, Society, Indian Culture Rating : 7/10</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/seeing-like-a-feminist.png" /></entry><entry><title type="html">Bowling Simulation - Code Refactoring</title><link href="http://localhost:4000/bowlingalley/" rel="alternate" type="text/html" title="Bowling Simulation - Code Refactoring" /><published>2019-02-11T22:32:00+08:00</published><updated>2019-02-11T22:32:00+08:00</updated><id>http://localhost:4000/bowlingalley</id><content type="html" xml:base="http://localhost:4000/bowlingalley/">&lt;p&gt;&lt;img src=&quot;https://img.shields.io/badge/Language-Java-orange.svg&quot; alt=&quot;Language : Java&quot; /&gt; &lt;img src=&quot;https://img.shields.io/badge/Status-Running-brightgreen.svg&quot; alt=&quot;Status : Running&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The refactoring task was undertaken as a team project for the Software Engineering course at IIIT Hyderabad. A codebase sized at 5000 locs was studied and refactored. The repository for the codebase and modifications made will be added right here as soon as the evaluations are in, till then, as per academic regulations, they remain private. The documentation of changes made and the study itself can be found below.&lt;/p&gt;

&lt;h2 id=&quot;overview-of-project&quot;&gt;Overview of Project:&lt;/h2&gt;

&lt;p&gt;The designed software is focused on  automating a chain of bowling establishments owned by the Lucky Strikes Bowling Center (LSBC). The final product needs to have certain basic functionalities which are listed below this paragraph. Besides the mentioned functionality, the project has been coded in line with established industry standards in Java, with proper documentation for easy understanding of the codebase and possible future refactoring and/or extension. List of functionalities:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Detection of the number of bowling pins knocked down after a bowler has bowled.&lt;/li&gt;
  &lt;li&gt;The bowling alley’s scoring station displays information corresponding to the current bowler’s score in respective bowling lanes.&lt;/li&gt;
  &lt;li&gt;Addition of new bowlers and edits to existing patrons.&lt;/li&gt;
  &lt;li&gt;A service to maintain history of a bowler’s score, average and relevant information is provided for.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;features-of-project&quot;&gt;Features of Project:&lt;/h2&gt;

&lt;h3 id=&quot;lane-management&quot;&gt;Lane Management&lt;/h3&gt;

&lt;p&gt;When a bowler enters a LSBC, he checks in at the control desk for a lane assignment. Bowlers may check in as a group or party so that they will be assigned to the same lane. Each lane can accommodate one to five bowlers. The order in which a party checks in determines the order in which they will bowl. Once a party has started bowling, the control desk can monitor the number of &lt;strong&gt;frames&lt;/strong&gt; completed by each bowler. When a bowler has completed a game, the control desk is notified of the bowler’s score for that game. When the last bowler in the party has completed his game, the party may start a new game or check out at the control desk.&lt;/p&gt;

&lt;h3 id=&quot;scoring-station&quot;&gt;Scoring Station&lt;/h3&gt;

&lt;p&gt;Each lane is equipped with a stand-alone scoring station that lists the bowlers’ names (in the order they checked in) and a graphic representation of their scores. A typical score sheet for one bowler looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/kgS8R1H/Screenshot-2019-01-28-at-1-31-38-AM.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bowlers alternate rolling the ball or taking throws according to the scoring rules of bowling referenced in the following section. The automatic pinsetter is able to detect the number of pins still standing on a lane after each throw. This information is then transmitted back to the scoring station. The scoring station also displays the pins that are still standing after each throw. More details on how to keep scores in bowling can be found &lt;a href=&quot;http://slocums.homestead.com/gamescore.html&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;pinsetter-interface&quot;&gt;Pinsetter Interface&lt;/h3&gt;

&lt;p&gt;The pinsetter interface communicates to the scoring station the pins that are left standing after a bowler has completed a throw. A throw is complete when the bowling ball hits the end of the alley beyond the last row of pins. The pinsetter will re-rack the pins (places all ten down) after two consecutive throws have been detected. The pinsetter interface also accepts a command that will be treated in the same manner as a thrown ball.&lt;/p&gt;

&lt;h3 id=&quot;bowler-management&quot;&gt;Bowler Management&lt;/h3&gt;

&lt;p&gt;A history of all bowler’s scores and their current average per game is maintained for patrons. Bowlers perform a one-time registration the first time they check in at the control desk by providing their full name and an email address. They also provide a preferred nickname to be displayed on the scoring station when they are bowling. When a bowler has checked out at the control desk after completing his/her games, a report is generated containing the bowler’s scores from games just completed, previous scores and his/her current average. This report is automatically emailed to the bowler with the option of a printout.&lt;/p&gt;

&lt;h3 id=&quot;additional-control-desk-functions&quot;&gt;Additional Control Desk Functions&lt;/h3&gt;

&lt;p&gt;The control desk operator has the ability to monitor the scores of any active lane. A configurable display option will allow the operator to view the score of an individual scoring station or multiple scoring stations. In the event a lane has a mechanical problem – ball not returned, pinsetter did not re-rack, etc.– the bowler may contact the control desk through an interface on the scoring station. The control station sends an acknowledgement of the request back to the scoring station.&lt;/p&gt;

&lt;h2 id=&quot;diagrammatic-representation&quot;&gt;Diagrammatic Representation:&lt;/h2&gt;

&lt;h3 id=&quot;class-diagrams&quot;&gt;Class Diagrams&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. Abstract Representation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/8NZPTkZ/UML-2.png&quot; alt=&quot;Abstract Class Diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Detailed Representation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/GtY9FjS/UML-1.jpg&quot; alt=&quot;Class Diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Abstract Diagram After Refactoring&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/xJYpg8R/abstract.png&quot; alt=&quot;Abstract Class Diagram After Refactoring&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Detailed Class Diagram After Refactoring&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/gdJ8SKw/new-class-diagram.jpg&quot; alt=&quot;Class Diagram after refactoring&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sequence-diagram&quot;&gt;Sequence Diagram:&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/gZNTVPz/sequence-diagram.png&quot; alt=&quot;Sequence Diagram&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;use-case-diagram&quot;&gt;Use-Case Diagram:&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/whYVK3y/bowling.png&quot; alt=&quot;Use-Case Diagram&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;responsibility-of-each-major-class&quot;&gt;Responsibility of Each Major Class:&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Class&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Responsibility&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alley&lt;/td&gt;
      &lt;td&gt;The Alley class is a container for the bowling simulator.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bowler&lt;/td&gt;
      &lt;td&gt;The Bowler class holds information about the bowlers.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ControlDesk&lt;/td&gt;
      &lt;td&gt;The Control Desk class manages all functionalities of the control desk in the bowling alley simulation.  It keeps tabs on availability of subscribers, queues,  lanes and also assigns lanes to bowlers. The Control  Desk also prints score.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Drive&lt;/td&gt;
      &lt;td&gt;The Drive class is the primary entry point for the program and it calls the ControlDesk and Alley classes.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;EndGameReport&lt;/td&gt;
      &lt;td&gt;The EndGameReport class creates the final score reports in a proper pre-defined format.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Lane&lt;/td&gt;
      &lt;td&gt;The Lane class handles the lane end of the bowling alley simulation. It keeps a tab on games and bowling frames,  while also displaying scores that are sent to it.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Pinsetter&lt;/td&gt;
      &lt;td&gt;The Pinsetter class represents the Pinsetter in the bowling simulation. It senses the number of pins knocked down by a  thrown ball and also simulates the throw of the bowling ball.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AddPartyView&lt;/td&gt;
      &lt;td&gt;Defines functions like Add Party, add party panel, setting layout and border of the bowling alley, etc. Adds the list of bowlers (team wise and individually) to be a list to make them play one after the other. Sets the functionalities of buttons and adds listeners to them.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ControlDeskView&lt;/td&gt;
      &lt;td&gt;The ControlDeskView class shows the score and pinsetter details  for each player/team that is currently playing in the alley.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;study-of-the-original-code&quot;&gt;Study of the Original Code:&lt;/h2&gt;

&lt;h3 id=&quot;strengths-of-the-original-codebase&quot;&gt;Strengths of the Original Codebase:&lt;/h3&gt;

&lt;h4 id=&quot;1-usage-of-object-oriented-design-patterns&quot;&gt;1. Usage of Object Oriented Design patterns&lt;/h4&gt;

&lt;p&gt;The codebase is built in an object oriented design with the usage of proper Object Oriented Design patterns. Programming structures of object oriented concepts are deftly applied.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inheritance&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Lane&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PinsetterObserver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In object-oriented programming, inheritance is the mechanism of basing an object or class upon another object (prototype-based inheritance) or class (class-based inheritance), retaining similar implementation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Encapsulation&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fullName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nickName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Encapsulation is defined as the wrapping up of data under a single unit. Technically in encapsulation, the variables or data of a class is hidden from any other class and can be accessed only through any member function of own class in which they are declared. As in encapsulation, the data in a class is hidden from other classes, so it is also known as data-hiding.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abstraction&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ControlDesk&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controlDesk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Abstraction is selecting data from a larger pool to show only the relevant details to the object. It helps to reduce programming complexity and effort. In Java, abstraction is accomplished using Abstract classes and interfaces. As in here, &lt;code class=&quot;highlighter-rouge&quot;&gt;controlDesk&lt;/code&gt; is an abstract object.&lt;/p&gt;

&lt;h4 id=&quot;2-less-within-class-code-smells&quot;&gt;2. Less Within-Class Code Smells&lt;/h4&gt;
&lt;p&gt;There are very few code smells that are related to variable names and comments. Thus we can say that the code is easy to understand and intuitive in that sense.&lt;/p&gt;

&lt;h4 id=&quot;3-use-of-standard-object-oriented-patterns&quot;&gt;3. Use of Standard Object Oriented Patterns&lt;/h4&gt;

&lt;p&gt;Widely accepted Object Oriented patterns have been used.&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LaneEventInterface&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rmi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Remote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getFrameNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rmi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RemoteException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getScore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rmi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RemoteException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCurScores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rmi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RemoteException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rmi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RemoteException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rmi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RemoteException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rmi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RemoteException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[][]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCumulScore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rmi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RemoteException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Party&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getParty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rmi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RemoteException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bowler&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBowler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rmi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RemoteException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;4-impressive-graphical-user-interface&quot;&gt;4. Impressive Graphical User Interface&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/XCfkJGp/GUI1.png&quot; alt=&quot;GUI Image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;weaknesses-of-the-original-codebase&quot;&gt;Weaknesses of the Original Codebase:&lt;/h3&gt;

&lt;h4 id=&quot;1-the-blob-kitchen-sink&quot;&gt;1. The Blob &lt;em&gt;(Kitchen Sink)&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/JyjPmt5/Screenshot-2019-02-11-at-5-08-44-AM.png&quot; alt=&quot;Lane Class&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Lane&lt;/code&gt; class is the perfect example of a &lt;strong&gt;kitchen sink&lt;/strong&gt; class, or a &lt;strong&gt;Blob.&lt;/strong&gt; The Blob is found in designs where one class monopolizes the processing, and other classes primarily encapsulate data. This AntiPattern is characterized by a class diagram composed of a single complex controller class surrounded by simple data classes. The key problem here is that the majority of the responsibilities are allocated to a single class.&lt;/p&gt;

&lt;p&gt;The Blob contains the majority of the process, and the other objects contain the data. Architectures with the Blob have separated process from data; in other words, they are procedural-style rather than object-oriented architectures.&lt;/p&gt;

&lt;h4 id=&quot;2-the-middleman-class&quot;&gt;2. The MiddleMan class&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/T2c7r87/middleman.jpg&quot; alt=&quot;MiddleMan in UML&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The class &lt;code class=&quot;highlighter-rouge&quot;&gt;Alley&lt;/code&gt; is the perfect example of a middleman class. The primary logic behind this code smell is the idea that if a class is delegating all its work, why does it exist? We can cut out the middleman. Classes like these are merely wrappers over other classes or existing functionality in the framework.&lt;/p&gt;

&lt;h4 id=&quot;3-long-parameter-list&quot;&gt;3. Long Parameter List&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LaneEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Party&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bowler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theBowler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[][]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theCumulScore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theScore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theCurScores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mechProblem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;bowler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theBowler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cumulScore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theCumulScore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theScore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;curScores&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theCurScores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;frameNum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ball&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;	
        &lt;span class=&quot;n&quot;&gt;mechProb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mechProblem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The original codebase contains multiple methods with long parameter lists. It’s hard to understand such lists, which become contradictory and hard to use as they grow longer. Instead of a long list of parameters, a method can use the data of its own object. If the current object doesn’t contain all necessary data, another object (which will get the necessary data) can be passed as a method parameter. Here, the method &lt;code class=&quot;highlighter-rouge&quot;&gt;LaneEvent()&lt;/code&gt; is highlighted with it’s extremely long parameter list.&lt;/p&gt;

&lt;h4 id=&quot;4-high-average-number-of-attributes-per-class&quot;&gt;4. High Average Number of Attributes Per Class&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddPartyView&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ActionListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ListSelectionListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JFrame&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JButton&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addPatron&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newPatron&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remPatron&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finished&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JList&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;partyList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;allBowlers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;party&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bowlerdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ControlDeskView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controlDesk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectedNick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectedMember&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The original codebase has a significantly high number of Attributes per Class, with a high of &lt;strong&gt;14&lt;/strong&gt; in the class &lt;code class=&quot;highlighter-rouge&quot;&gt;AddPartyView&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;our-workflow&quot;&gt;Our Workflow:&lt;/h2&gt;

&lt;h3 id=&quot;1-understanding-the-codebase&quot;&gt;1. Understanding the Codebase&lt;/h3&gt;

&lt;p&gt;We went through the codebase in detail with careful emphasis on understanding the implementation. Focus was laid on analyzing different classes, interpreters and included methods to better understand the functioning of the codebase and understand the flow of control.&lt;/p&gt;

&lt;h3 id=&quot;2-drawing-uml-representation-of-the-codebase&quot;&gt;2. Drawing UML Representation of the Codebase&lt;/h3&gt;

&lt;p&gt;Upon getting comfortable with the codebase we proceeded to draw a UML Class diagram representing the structure of the codebase along with a sequence diagram to show the flow of control in the codebase. This helped clarify our own understanding as well as brought implementation defects and code-smells to light.&lt;/p&gt;

&lt;h3 id=&quot;3-identifying-stakeholders&quot;&gt;3. Identifying Stakeholders&lt;/h3&gt;

&lt;p&gt;We used the UML Sequence Diagram to work upon our understanding of the various stakeholders in the Bowling Alley Management System. Identifying stakeholders enabled us to look at the flow of control from different perspectives, including user-end views, which brought implementation and code-smells improvements to light.&lt;/p&gt;

&lt;h3 id=&quot;4-understanding-features&quot;&gt;4. Understanding Features&lt;/h3&gt;

&lt;p&gt;We used the UML Class Diagram to understand the various functionalities of the codebase. Isolating each functionality and understanding its flow of control played an important role in understanding multiple feature-related code-smells and defects in implementation.&lt;/p&gt;

&lt;h3 id=&quot;5-identify-code-smells&quot;&gt;5. Identify Code Smells&lt;/h3&gt;

&lt;p&gt;Based on our understanding of the project gained through an in-depth reading of the codebase and study of UML Class and Sequence diagrams we isolated code smells in the project that we believed could be fixed iteratively with constant testing. Following sections of this document lay greater emphasis on the categories of code-smells identified and our counter-strategy for them.&lt;/p&gt;

&lt;h3 id=&quot;6-fixing-and-logging-the-code-smells&quot;&gt;6. Fixing and Logging the Code Smells&lt;/h3&gt;

&lt;p&gt;Post isolation, we went ahead and fixed the code-smells using strategies highlighted in later sections. During the entire iterative refactoring process we tested the codebase for functionality at each stage. Each code-smell was logged upon being worked upon and the work was documented thereafter.&lt;/p&gt;

&lt;h2 id=&quot;how-our-design-is-an-improvement-and-code-smells-solved&quot;&gt;How Our Design is an Improvement and Code Smells Solved:&lt;/h2&gt;

&lt;h3 id=&quot;1-high-cohesion&quot;&gt;1. High Cohesion&lt;/h3&gt;

&lt;p&gt;Cohesion refers to the degree to which the elements inside a module belong together. It is a measure of the strength of relationship between the methods and data of a class and some unifying purpose or concept served by that class. In another sense, it is a measure of the strength of relationship between the class’s methods and data themselves. Modules with high cohesion tend to be preferable, because high cohesion is associated with several desirable traits of software including robustness, reliability, reusability, and understandability.&lt;/p&gt;

&lt;p&gt;For example, in the refactored codebase, the originally &lt;strong&gt;Blob Class&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Lane&lt;/code&gt; has been simplified to make it more cohesive.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Lane&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PinsetterObserver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;	
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Party&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;party&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pinsetter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscribers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gameIsHalted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;partyAssigned&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gameFinished&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bowlerIterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bowlIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;frameNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tenthFrameStrike&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curScores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[][]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cumulScores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canThrowAgain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[][]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finalScores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gameNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bowler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentThrower&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;			
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-lazy-middleman-class-removed&quot;&gt;2. Lazy MiddleMan Class Removed&lt;/h3&gt;

&lt;p&gt;Classes that largely delegate a majority, or in cases, all of their functionality to other classes, or rely on calling methods from other classes for their functioning and lack any useful methods or their own are classified as a lazy class. For example, in our codebase, the class &lt;code class=&quot;highlighter-rouge&quot;&gt;Alley&lt;/code&gt; was a lazy class, which was merely delegating it’s functionality to other classes.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Alley&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ControlDesk&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controldesk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Alley&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numLanes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;controldesk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ControlDesk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numLanes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ControlDesk&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getControlDesk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controldesk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The class &lt;code class=&quot;highlighter-rouge&quot;&gt;Alley&lt;/code&gt; seemed integral to the project, but upon closer investigation it turned out to be middleman calling other class’ methods. Hence, the class was eliminated and it’s functionality re-distributed. In-line with the characteristics of &lt;strong&gt;Poltergeist Anti-Pattern&lt;/strong&gt;, the management of functionality and complexity of the code was increasing. This issue was deftly dealt with.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.ibb.co/T2c7r87/middleman.jpg&quot; alt=&quot;MiddleMan in UML&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-cyclomatic-complexity-reduced&quot;&gt;3. Cyclomatic Complexity Reduced&lt;/h3&gt;

&lt;p&gt;The Cyclomatic complexity of a method is calculated by developing a Control Flow Graph of the code that measures the number of linearly-independent paths through a program module. We have set the limit for cyclomatic complexity to 12. Hence we reduced the complexities of methods and classed to less than 12. Cyclomatic complexity found:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Method&lt;/th&gt;
      &lt;th&gt;Previous Cyclomatic Complexity&lt;/th&gt;
      &lt;th&gt;New Cyclomatic Complexity&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;receiveLaneEvent()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;receivePinsetterEvent()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getScore()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;addPartyView()&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;We created two new methods i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;gameNotFinished()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;runLaneMethod()&lt;/code&gt; that are independent of each other and will be called inside the run function at the time of execution. This reduces the cyclomatic complexity of &lt;code class=&quot;highlighter-rouge&quot;&gt;getScore()&lt;/code&gt; to 9. Similarly, a new method named &lt;code class=&quot;highlighter-rouge&quot;&gt;frameNumber9()&lt;/code&gt; which handles conditions that don’t allow users another throw and handles the case of 10th frame first was created to reduce the cyclomatic complexity of &lt;code class=&quot;highlighter-rouge&quot;&gt;run()&lt;/code&gt; to 10.&lt;/p&gt;

&lt;p&gt;A new method named &lt;code class=&quot;highlighter-rouge&quot;&gt;laneEventBowlers()&lt;/code&gt; was created that handles the lane events for Bowlers and hence reduced the cyclomatic complexity to of &lt;code class=&quot;highlighter-rouge&quot;&gt;receiveLaneEvent()&lt;/code&gt; to 11. Similarly, the method &lt;code class=&quot;highlighter-rouge&quot;&gt;partyContentCheck()&lt;/code&gt; handles the checking of whether a player belongs to a party and reduces the cyclomatic complexity of &lt;code class=&quot;highlighter-rouge&quot;&gt;addPartyView()&lt;/code&gt; to 10.&lt;/p&gt;

&lt;h3 id=&quot;4-long-methods-reduced-in-size-without-loss-in-functionality&quot;&gt;4. Long Methods reduced in size without loss in functionality&lt;/h3&gt;

&lt;p&gt;Shorter methods are easier to extend, easier to understand and easier to maintain, hence long methods in the existing codebase were identified as code-smells and acted upon. Methods were simplified by splitting independent parts of code into new methods. A trade-off here is that the total number of methods increased. Methods which violate the rule are:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Method&lt;/th&gt;
      &lt;th&gt;Previous Line Count&lt;/th&gt;
      &lt;th&gt;New Line Count&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getScore&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;92&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;addPartyView&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;132&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;5-long-parameter-list-restrained&quot;&gt;5. Long Parameter List Restrained&lt;/h3&gt;

&lt;p&gt;The more parameters a method has, the more complex it is. Hence, maximum number of parameters are set to 7.
Classes which violate the rule were modified to reduce the number of required parameters. For example, in&lt;code class=&quot;highlighter-rouge&quot;&gt;LaneEvent&lt;/code&gt; integral parameters were grouped together into a single &lt;code class=&quot;highlighter-rouge&quot;&gt;ArrayList&lt;/code&gt; of adequate dimensions. Classes which were corrected are as follows:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Class&lt;/th&gt;
      &lt;th&gt;Previous Parameter Count&lt;/th&gt;
      &lt;th&gt;New Parameter Count&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LaneEvent&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;6-removing-dead-code&quot;&gt;6. Removing Dead Code&lt;/h3&gt;
&lt;p&gt;Dead code is a section in the source code of a program which is executed but whose result is never used in any other computation. The execution of dead code wastes computation time and memory. We found dead code in the following classes and simply deleted those lines of code.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getScore()&lt;/code&gt; 
 Several lines of dead code were deleted which were commented out and were not serving any purpose.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7-nested-block-depth&quot;&gt;7. Nested Block Depth&lt;/h3&gt;
&lt;p&gt;Nested block depth is defined as the depth of the nested block of code. Greater depth makes the understanding, extension and refactoring of code complicated. Hence, its desirable to reduce the nested block depth. We worked on the &lt;code class=&quot;highlighter-rouge&quot;&gt;getScore()&lt;/code&gt; method and reduced its effective nested block depth significantly.&lt;/p&gt;

&lt;h3 id=&quot;8-lack-of-descriptive-comments&quot;&gt;8. Lack of Descriptive Comments&lt;/h3&gt;
&lt;p&gt;The project contains a skeletal amount of documentation, with bare-minimum descriptive comments for certain classes. Hence, documentation was added for the following classes to make the code more readable, extensible and understandable:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ScoreReport&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ScoreHistoryFile&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Score&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Queue&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;9-uncommunicative-names&quot;&gt;9. Uncommunicative Names&lt;/h3&gt;
&lt;p&gt;Uncommunicative or unintuitive class names make it extremely hard to understand and extend a codebase. The general rule of thumb is that if the name of the method succinctly describes what that method does then it’s an acceptable name. Else, there is an urgent need to rewrite it. The classes and methods we renamed are as follows:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Old Name&lt;/th&gt;
      &lt;th&gt;New Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;NewPatternView&lt;/td&gt;
      &lt;td&gt;AddPatternView&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;assignParty()&lt;/td&gt;
      &lt;td&gt;startParty()&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;</content><author><name>vivekkaushal</name></author><category term="projects" /><category term="Java" /><category term="Software Engineering" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/messenger.png" /></entry><entry><title type="html">Messenger Unofficial API and Automation</title><link href="http://localhost:4000/messenger/" rel="alternate" type="text/html" title="Messenger Unofficial API and Automation" /><published>2019-01-05T07:32:00+08:00</published><updated>2019-01-05T07:32:00+08:00</updated><id>http://localhost:4000/messenger</id><content type="html" xml:base="http://localhost:4000/messenger/">&lt;p&gt;Messenger remains a huge part of how my immediate community interacts and functions. I started contributing to &lt;a href=&quot;https://github.com/carpedm20/fbchat&quot;&gt;Tahoon Kim’s&lt;/a&gt; unofficial messenger API for pythonic development when I found a bug in its implementation while scripting a cronjob to notify people who share Netflix with me to pay up fast every month. :P&lt;/p&gt;

&lt;p&gt;Have some major ideas planned for the project, and am also working on multiple automation projects based on the unofficial API. Great community of passionate developers, love being a part of it!&lt;/p&gt;

&lt;p&gt;Checkout the code &lt;a href=&quot;https://github.com/carpedm20/fbchat&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;</content><author><name>vivekkaushal</name></author><category term="projects" /><category term="Scripts" /><category term="Python" /><category term="Open Source" /><summary type="html">Messenger remains a huge part of how my immediate community interacts and functions. I started contributing to Tahoon Kim’s unofficial messenger API for pythonic development when I found a bug in its implementation while scripting a cronjob to notify people who share Netflix with me to pay up fast every month. :P</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/messenger.png" /></entry></feed>